//
// TextToSpeechAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class TextToSpeechAPI {

    /**
     Text To Speech
     
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter bodyTextToSpeechV1TextToSpeechVoiceIdPost: (body)  
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func textToSpeechV1TextToSpeechVoiceIdPost(voiceId: String, bodyTextToSpeechV1TextToSpeechVoiceIdPost: BodyTextToSpeechV1TextToSpeechVoiceIdPost, xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return textToSpeechV1TextToSpeechVoiceIdPostWithRequestBuilder(voiceId: voiceId, bodyTextToSpeechV1TextToSpeechVoiceIdPost: bodyTextToSpeechV1TextToSpeechVoiceIdPost, xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Text To Speech
     - POST /v1/text-to-speech/{voice_id}
     - Converts text into speech using a voice of your choice and returns audio.
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter bodyTextToSpeechV1TextToSpeechVoiceIdPost: (body)  
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func textToSpeechV1TextToSpeechVoiceIdPostWithRequestBuilder(voiceId: String, bodyTextToSpeechV1TextToSpeechVoiceIdPost: BodyTextToSpeechV1TextToSpeechVoiceIdPost, xiApiKey: String? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/v1/text-to-speech/{voice_id}"
        let voiceIdPreEscape = "\(APIHelper.mapValueToPathItem(voiceId))"
        let voiceIdPostEscape = voiceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{voice_id}", with: voiceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bodyTextToSpeechV1TextToSpeechVoiceIdPost)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Text To Speech
     
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost: (body)  
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func textToSpeechV1TextToSpeechVoiceIdStreamPost(voiceId: String, bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost: BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost, xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return textToSpeechV1TextToSpeechVoiceIdStreamPostWithRequestBuilder(voiceId: voiceId, bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost: bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost, xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Text To Speech
     - POST /v1/text-to-speech/{voice_id}/stream
     - Converts text into speech using a voice of your choice and returns audio as an audio stream.
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost: (body)  
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func textToSpeechV1TextToSpeechVoiceIdStreamPostWithRequestBuilder(voiceId: String, bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost: BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost, xiApiKey: String? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/v1/text-to-speech/{voice_id}/stream"
        let voiceIdPreEscape = "\(APIHelper.mapValueToPathItem(voiceId))"
        let voiceIdPostEscape = voiceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{voice_id}", with: voiceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
