//
// VoicesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class VoicesAPI {

    /**
     Add Voice
     
     - parameter name: (form) The name that identifies this voice. This will be displayed in the dropdown of the website. 
     - parameter files: (form) One or more audio files to clone the voice from 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func addVoiceV1VoicesAddPost(name: String, files: [URL], xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: AddVoiceResponseModel?, _ error: Error?) -> Void)) -> RequestTask {
        return addVoiceV1VoicesAddPostWithRequestBuilder(name: name, files: files, xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Add Voice
     - POST /v1/voices/add
     - Add a new voice to your collection of voices in VoiceLab.
     - parameter name: (form) The name that identifies this voice. This will be displayed in the dropdown of the website. 
     - parameter files: (form) One or more audio files to clone the voice from 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<AddVoiceResponseModel> 
     */
    open class func addVoiceV1VoicesAddPostWithRequestBuilder(name: String, files: [URL], xiApiKey: String? = nil) -> RequestBuilder<AddVoiceResponseModel> {
        let localVariablePath = "/v1/voices/add"
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableFormParams: [String: Any?] = [
            "name": name.encodeToJSON(),
            "files": files.encodeToJSON(),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "multipart/form-data",
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AddVoiceResponseModel>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Delete Voice
     
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deleteVoiceV1VoicesVoiceIdDelete(voiceId: String, xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return deleteVoiceV1VoicesVoiceIdDeleteWithRequestBuilder(voiceId: voiceId, xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete Voice
     - DELETE /v1/voices/{voice_id}
     - Deletes a voice by its ID.
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func deleteVoiceV1VoicesVoiceIdDeleteWithRequestBuilder(voiceId: String, xiApiKey: String? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/v1/voices/{voice_id}"
        let voiceIdPreEscape = "\(APIHelper.mapValueToPathItem(voiceId))"
        let voiceIdPostEscape = voiceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{voice_id}", with: voiceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Edit Voice Settings
     
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter settings: (body)  
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func editVoiceSettingsV1VoicesVoiceIdSettingsEditPost(voiceId: String, settings: Settings, xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return editVoiceSettingsV1VoicesVoiceIdSettingsEditPostWithRequestBuilder(voiceId: voiceId, settings: settings, xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Edit Voice Settings
     - POST /v1/voices/{voice_id}/settings/edit
     - Edit your settings for a specific voice.
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter settings: (body)  
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func editVoiceSettingsV1VoicesVoiceIdSettingsEditPostWithRequestBuilder(voiceId: String, settings: Settings, xiApiKey: String? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/v1/voices/{voice_id}/settings/edit"
        let voiceIdPreEscape = "\(APIHelper.mapValueToPathItem(voiceId))"
        let voiceIdPostEscape = voiceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{voice_id}", with: voiceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: settings)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Edit Voice
     
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter name: (form) The name that identifies this voice. This will be displayed in the dropdown of the website. 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter files: (form) Audio files to add to the voice (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func editVoiceV1VoicesVoiceIdEditPost(voiceId: String, name: String, xiApiKey: String? = nil, files: [URL]? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return editVoiceV1VoicesVoiceIdEditPostWithRequestBuilder(voiceId: voiceId, name: name, xiApiKey: xiApiKey, files: files).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Edit Voice
     - POST /v1/voices/{voice_id}/edit
     - Edit a voice created by you.
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter name: (form) The name that identifies this voice. This will be displayed in the dropdown of the website. 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter files: (form) Audio files to add to the voice (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func editVoiceV1VoicesVoiceIdEditPostWithRequestBuilder(voiceId: String, name: String, xiApiKey: String? = nil, files: [URL]? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/v1/voices/{voice_id}/edit"
        let voiceIdPreEscape = "\(APIHelper.mapValueToPathItem(voiceId))"
        let voiceIdPostEscape = voiceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{voice_id}", with: voiceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableFormParams: [String: Any?] = [
            "name": name.encodeToJSON(),
            "files": files?.encodeToJSON(),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "multipart/form-data",
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Default Voice Settings
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getDefaultVoiceSettingsV1VoicesSettingsDefaultGet(apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: VoiceSettingsResponseModel?, _ error: Error?) -> Void)) -> RequestTask {
        return getDefaultVoiceSettingsV1VoicesSettingsDefaultGetWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Default Voice Settings
     - GET /v1/voices/settings/default
     - Gets the default settings for voices.
     - returns: RequestBuilder<VoiceSettingsResponseModel> 
     */
    open class func getDefaultVoiceSettingsV1VoicesSettingsDefaultGetWithRequestBuilder() -> RequestBuilder<VoiceSettingsResponseModel> {
        let localVariablePath = "/v1/voices/settings/default"
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<VoiceSettingsResponseModel>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Voice Settings
     
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getVoiceSettingsV1VoicesVoiceIdSettingsGet(voiceId: String, xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: VoiceSettingsResponseModel?, _ error: Error?) -> Void)) -> RequestTask {
        return getVoiceSettingsV1VoicesVoiceIdSettingsGetWithRequestBuilder(voiceId: voiceId, xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Voice Settings
     - GET /v1/voices/{voice_id}/settings
     - Returns the settings for a specific voice.
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<VoiceSettingsResponseModel> 
     */
    open class func getVoiceSettingsV1VoicesVoiceIdSettingsGetWithRequestBuilder(voiceId: String, xiApiKey: String? = nil) -> RequestBuilder<VoiceSettingsResponseModel> {
        var localVariablePath = "/v1/voices/{voice_id}/settings"
        let voiceIdPreEscape = "\(APIHelper.mapValueToPathItem(voiceId))"
        let voiceIdPostEscape = voiceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{voice_id}", with: voiceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<VoiceSettingsResponseModel>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Voice
     
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter withSettings: (query) If set will return settings information corresponding to the voice, requires authorization. (optional, default to false)
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getVoiceV1VoicesVoiceIdGet(voiceId: String, withSettings: Bool? = nil, xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: VoiceResponseModel?, _ error: Error?) -> Void)) -> RequestTask {
        return getVoiceV1VoicesVoiceIdGetWithRequestBuilder(voiceId: voiceId, withSettings: withSettings, xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Voice
     - GET /v1/voices/{voice_id}
     - Returns metadata about a specific voice.
     - parameter voiceId: (path) Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. 
     - parameter withSettings: (query) If set will return settings information corresponding to the voice, requires authorization. (optional, default to false)
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<VoiceResponseModel> 
     */
    open class func getVoiceV1VoicesVoiceIdGetWithRequestBuilder(voiceId: String, withSettings: Bool? = nil, xiApiKey: String? = nil) -> RequestBuilder<VoiceResponseModel> {
        var localVariablePath = "/v1/voices/{voice_id}"
        let voiceIdPreEscape = "\(APIHelper.mapValueToPathItem(voiceId))"
        let voiceIdPostEscape = voiceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{voice_id}", with: voiceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "with_settings": (wrappedValue: withSettings?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<VoiceResponseModel>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Voices
     
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getVoicesV1VoicesGet(xiApiKey: String? = nil, apiResponseQueue: DispatchQueue = ElevenLabsAPIAPI.apiResponseQueue, completion: @escaping ((_ data: GetVoicesResponseModel?, _ error: Error?) -> Void)) -> RequestTask {
        return getVoicesV1VoicesGetWithRequestBuilder(xiApiKey: xiApiKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Voices
     - GET /v1/voices
     - Gets a list of all available voices for a user.
     - parameter xiApiKey: (header) Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     - returns: RequestBuilder<GetVoicesResponseModel> 
     */
    open class func getVoicesV1VoicesGetWithRequestBuilder(xiApiKey: String? = nil) -> RequestBuilder<GetVoicesResponseModel> {
        let localVariablePath = "/v1/voices"
        let localVariableURLString = ElevenLabsAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "xi-api-key": xiApiKey?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetVoicesResponseModel>.Type = ElevenLabsAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
